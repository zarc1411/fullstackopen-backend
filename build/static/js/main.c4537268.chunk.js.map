{"version":3,"sources":["components/Filter.js","services/personService.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","searchItem","handleSearchItemChange","value","onChange","baseUrl","PersonForm","persons","newName","newNumber","handleNameChange","handleNumberChange","setPersons","setNewName","setNewNumber","setMessage","setErrorMessage","onSubmit","event","preventDefault","nameIndex","findIndex","person","name","find","window","confirm","changedPerson","number","id","axios","put","then","response","data","personService","changedObject","map","currentPerson","catch","error","setTimeout","newObject","post","returnedObject","newPersons","concat","type","Persons","personsArrayToShow","filter","toLowerCase","includes","deletePerson","personName","delete","key","onClick","Notification","message","errorMessage","className","App","useState","useEffect","get","initialPhoneNumbers","setSearchItem","currentSearchItem","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4537268.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ searchItem, handleSearchItemChange }) => {\n  return (\n    <div>\n      filter shown with{\" \"}\n      <input value={searchItem} onChange={handleSearchItemChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject);\n    return request.then((response) => response.data);\n};\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`);\n    return request.then((response) => response.data);\n};\n\nconst updateNumber = (id, changedPerson) => {\n    const request = axios.put(`${baseUrl}/${id}`, changedPerson);\n    return request.then((response) => response.data);\n};\nexport { getAll, create, deletePerson, updateNumber };\n","import React from \"react\";\nimport * as personService from \"../services/personService\";\nconst PersonForm = ({\n    persons,\n    newName,\n    newNumber,\n    handleNameChange,\n    handleNumberChange,\n    setPersons,\n    setNewName,\n    setNewNumber,\n    setMessage,\n    setErrorMessage,\n}) => {\n    const addPerson = (event) => {\n        event.preventDefault();\n        const nameIndex = persons.findIndex(\n            (person) => person.name === newName\n        );\n        const person = persons.find((person) => person.name === newName);\n        if (nameIndex !== -1) {\n            if (\n                window.confirm(\n                    `${newName} is already added to phonebook, replace the old number with a new one?`\n                )\n            ) {\n                const changedPerson = { ...person, number: newNumber };\n                personService\n                    .updateNumber(person.id, changedPerson)\n                    .then((changedObject) => {\n                        setPersons(\n                            persons.map((currentPerson) =>\n                                currentPerson.id !== person.id\n                                    ? currentPerson\n                                    : changedObject\n                            ),\n                        );\n                        setMessage(`Added ${changedObject.name}`);\n                    })\n                    .catch((error) => {\n                        setErrorMessage(\n                            `Information of ${changedPerson.name} has already been removed from the server`\n                        );\n                        setTimeout(() => {\n                            setErrorMessage(null);\n                        }, 5000);\n                    });\n            }\n        } else if (newName !== \"\" && newNumber !== \"\") {\n            const newObject = {\n                name: newName,\n                number: newNumber,\n            };\n            personService.create(newObject).then((returnedObject) => {\n                let newPersons = persons.concat(returnedObject);\n                setPersons(newPersons);\n                setMessage(`Added ${returnedObject.name}`);\n                setTimeout(() => {\n                    setMessage(null);\n                }, 5000);\n            });\n            setNewName(\"\");\n            setNewNumber(\"\");\n        }\n    };\n\n    return (\n        <form onSubmit={addPerson}>\n            <div>\n                name : <input value={newName} onChange={handleNameChange} />\n            </div>\n            <div>\n                number :{\" \"}\n                <input value={newNumber} onChange={handleNumberChange} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    );\n};\n\nexport default PersonForm;\n","import React from \"react\";\nimport * as personService from \"../services/personService\";\nconst Persons = ({ persons, searchItem, setPersons }) => {\n    const personsArrayToShow =\n        searchItem === \"\"\n            ? persons\n            : persons.filter((person) =>\n                  person.name.toLowerCase().includes(searchItem)\n              );\n    const deletePerson = (personName, id) => {\n        if (window.confirm(`Delete ${personName}?`)) {\n            personService.deletePerson(id).then(() => {\n                setPersons(persons.filter((person) => person.id !== id));\n            });\n        }\n    };\n    return (\n        <div>\n            {personsArrayToShow.map((person) => (\n                <p key={person.name}>\n                    {person.name} {person.number}{\" \"}\n                    <button\n                        onClick={() => deletePerson(person.name, person.id)}\n                    >\n                        Delete\n                    </button>\n                </p>\n            ))}\n        </div>\n    );\n};\n\nexport default Persons;\n","import React from \"react\";\n\nconst Notification = ({ message, errorMessage }) => {\n    if (message === null && errorMessage === null) {\n        return null;\n    } else if (message) {\n        return <div className=\"message\">{message}</div>;\n    } else {\n        return <div className=\"errorMessage\">{errorMessage}</div>;\n    }\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport * as personService from \"../src/services/personService\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    useEffect(() => {\n        personService.getAll().then((initialPhoneNumbers) => setPersons(initialPhoneNumbers));\n    }, []);\n\n    const [newName, setNewName] = useState(\"\"); //controlling the form element\n    const [newNumber, setNewNumber] = useState(\"\");\n    const [searchItem, setSearchItem] = useState(\"\");\n    const [message, setMessage] = useState(null);\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value);\n    };\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value);\n    };\n\n    const handleSearchItemChange = (event) => {\n        const currentSearchItem = event.target.value;\n        setSearchItem(currentSearchItem.toLowerCase());\n    };\n\n    return (\n        <div>\n            <h2>PhoneBook</h2>\n            <Notification message={message} errorMessage={errorMessage} />\n            <Filter\n                searchItem={searchItem}\n                handleSearchItemChange={handleSearchItemChange}\n            />\n            <h2>add a new</h2>\n            <PersonForm\n                persons={persons}\n                newName={newName}\n                handleNameChange={handleNameChange}\n                newNumber={newNumber}\n                handleNumberChange={handleNumberChange}\n                setPersons={setPersons}\n                setNewName={setNewName}\n                setNewNumber={setNewNumber}\n                setMessage={setMessage}\n                setErrorMessage={setErrorMessage}\n            />\n\n            <h2>Numbers</h2>\n            <Persons\n                persons={persons}\n                searchItem={searchItem}\n                setPersons={setPersons}\n            />\n        </div>\n    );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}